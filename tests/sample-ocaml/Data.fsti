module Data

(* This file has been automatically generated by EverParse. *)
open FStar.Bytes
module U8 = FStar.UInt8
module U16 = FStar.UInt16
module U32 = FStar.UInt32
module U64 = FStar.UInt64
module LP = LowParse.Spec.Base
module LPI = LowParse.Spec.AllIntegers
module L = FStar.List.Tot
module BY = FStar.Bytes

open Boolean

type data =
  | Payloads_TRUE of U32.t
  | Payloads_FALSE of U16.t

inline_for_extraction let tag_of_data (x:data) : boolean = match x with
  | Payloads_TRUE _ -> TRUE
  | Payloads_FALSE _ -> FALSE

inline_for_extraction noextract let data_parser_kind = LP.strong_parser_kind 3 5 None

val data_parser: LP.parser data_parser_kind data

noextract val data_serializer: LP.serializer data_parser

noextract val data_bytesize (x:data) : GTot nat

noextract val data_bytesize_eq (x:data) : Lemma (data_bytesize x == Seq.length (LP.serialize data_serializer x))
