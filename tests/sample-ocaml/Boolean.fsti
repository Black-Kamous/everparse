module Boolean

(* This file has been automatically generated by EverParse. *)
open FStar.Bytes
module U8 = FStar.UInt8
module U16 = FStar.UInt16
module U32 = FStar.UInt32
module U64 = FStar.UInt64
module LP = LowParse.Spec.Base
module LPI = LowParse.Spec.AllIntegers
module L = FStar.List.Tot
module BY = FStar.Bytes


type boolean =
  | FALSE
  | TRUE

let string_of_boolean = function
  | FALSE -> "FALSE"
  | TRUE -> "TRUE"

inline_for_extraction noextract let boolean_parser_kind = LP.strong_parser_kind 1 1 None

val boolean_parser: LP.parser boolean_parser_kind boolean

noextract val boolean_serializer: LP.serializer boolean_parser

noextract val boolean_bytesize (x:boolean) : GTot nat

noextract val boolean_bytesize_eq (x:boolean) : Lemma (boolean_bytesize x == Seq.length (LP.serialize boolean_serializer x))
