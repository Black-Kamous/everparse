/* 
  This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
  KreMLin invocation: krml -I ../../src/lowparse -skip-compilation -tmpdir ../unittests.snapshot -bundle LowParse.\* -drop FStar.Tactics.\* -drop FStar.Reflection.\* T10.fst T11.fst T11_z.fst T12.fst T12_z.fst T13.fst T13_x.fst T14.fst T14_x.fst T15_body.fst T15.fst T16.fst T16_x.fst T17.fst T17_x_a.fst T17_x_b.fst T18.fst T18_x_a.fst T18_x_b.fst T19.fst T1.fst T20.fst T21.fst T22_body_a.fst T22_body_b.fst T22.fst T23.fst T24.fst T24_y.fst T25_bpayload.fst T25.fst T25_payload.fst T26.fst T27.fst T28.fst T29.fst T2.fst T30.fst T31.fst T32.fst T33.fst T34.fst T35.fst T36.fst T3.fst T4.fst T5.fst T6.fst T6le.fst T7.fst T8.fst T8_z.fst T9_b.fst T9.fst Tag2.fst Tag.fst Tagle.fst -warn-error +9
  F* version: 74c6d2a5
  KreMLin version: 1bd260eb
 */

#include "kremlib.h"
#ifndef __Tag2_H
#define __Tag2_H

#include "LowParse.h"


typedef uint8_t Tag2_tag2_repr;

bool Tag2_tag2_repr_eq(uint8_t x1, uint8_t x2);

bool Tag2_known_tag2_repr(uint8_t v1);

#define Tag2_X 0
#define Tag2_Y 1
#define Tag2_Z 2
#define Tag2_T 3
#define Tag2_V 4
#define Tag2_W 5
#define Tag2_Unknown_tag2 6

typedef uint8_t Tag2_tag2_tags;

typedef struct Tag2_tag2_s
{
  Tag2_tag2_tags tag;
  uint8_t _0;
}
Tag2_tag2;

bool Tag2_uu___is_X(Tag2_tag2 projectee);

bool Tag2_uu___is_Y(Tag2_tag2 projectee);

bool Tag2_uu___is_Z(Tag2_tag2 projectee);

bool Tag2_uu___is_T(Tag2_tag2 projectee);

bool Tag2_uu___is_V(Tag2_tag2 projectee);

bool Tag2_uu___is_W(Tag2_tag2 projectee);

bool Tag2_uu___is_Unknown_tag2(Tag2_tag2 projectee);

uint8_t Tag2___proj__Unknown_tag2__item___0(Tag2_tag2 projectee);

Prims_string Tag2_string_of_tag2(Tag2_tag2 uu___0_14628);

uint32_t Tag2_tag2_validator(LowParse_Slice_slice input, uint32_t pos);

uint32_t Tag2_tag2_jumper(LowParse_Slice_slice input, uint32_t pos);

#define LowParse_Spec_Enum_Known 0
#define LowParse_Spec_Enum_Unknown 1

typedef uint8_t LowParse_Spec_Enum_maybe_enum_key__Tag2_tag2_uint8_t_tags;

typedef struct LowParse_Spec_Enum_maybe_enum_key__Tag2_tag2_uint8_t_s
{
  LowParse_Spec_Enum_maybe_enum_key__Tag2_tag2_uint8_t_tags tag;
  union {
    Tag2_tag2 case_Known;
    uint8_t case_Unknown;
  }
  ;
}
LowParse_Spec_Enum_maybe_enum_key__Tag2_tag2_uint8_t;

Tag2_tag2 Tag2_tag2_reader(LowParse_Slice_slice input, uint32_t pos);

bool __eq__Tag2_tag2(Tag2_tag2 y, Tag2_tag2 x);

uint32_t Tag2_tag2_writer(Tag2_tag2 x, LowParse_Slice_slice input, uint32_t pos);

#define __Tag2_H_DEFINED
#endif
