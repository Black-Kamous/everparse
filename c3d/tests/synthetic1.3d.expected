UINT32 enum _c3danonenum0 {
  V2 = 2,
  V3 = 3,
  V4 = 4,
  V5 = 5,
  V6 = 6,
  V7 = 7,
  V8 = 8,
  V9 = 9,
}
typedef uint32_t UINT32_Alias1;

typedef uint32_t UINT32_Alias2;

typedef uint32_t UINT32_Alias3;

typedef uint32_t UINT32_Alias4;

typedef uint32_t UINT32_Alias5;

typedef uint32_t ULONG;

typedef struct _STRUCT_1 (uint32_t Len)
where (Len == sizeof (this))
 { 
  UINT32_Alias1 f1;
  uint32_t f2;
  uint32_t f3;
  uint32_t f4;
} STRUCT_1, *PSTRUCT_1;

typedef struct _STRUCT_2 (uint32_t Len)
where (Len == sizeof (this))
 { 
  UINT32_Alias3 len;
  STRUCT_1(len) field_1;
} STRUCT_2, *PSTRUCT_2;

typedef struct _STRUCT_3 (uint32_t TotalLen) { 
  UINT32_Alias1 f1;
  UINT32_Alias2 f2;
  ULONG len;
  uint32_t offset { is_range_okay(TotalLen, offset, len) && offset >= sizeof (this) } ;
  UINT32_Alias4 f4 { f4 == 0 } ;
  uint8_t buffer[:byte-size (TotalLen - sizeof (this))];
} STRUCT_3, *PSTRUCT_3;

UINT32 enum _c3danonenum1 {
  TAG_STRUCT_1 = 0,
  TAG_STRUCT_2 = 2,
  TAG_STRUCT_3 = 3,
}
casetype _UNION_1 (uint32_t Tag, uint32_t TotalLen) { 
 switch (Tag) {
  case TAG_STRUCT_1: 
    STRUCT_1(TotalLen) struct1;
  case TAG_STRUCT_2: 
    STRUCT_2(TotalLen) struct2;
  case TAG_STRUCT_3: 
    STRUCT_3(TotalLen) struct3;
  default: 
    unit empty;
 }
} UNION_1, *PUNION_1;

entrypoint
typedef struct _CONTAINER_1 { 
  uint32_t Tag;
  uint32_t MessageLength { MessageLength >= sizeof (this) } ;
  UNION_1(Tag, MessageLength - sizeof (this)) union_;
} CONTAINER_1, *PCONTAINER_1;

